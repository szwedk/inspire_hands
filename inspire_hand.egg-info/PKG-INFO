Metadata-Version: 2.4
Name: inspire_hand
Version: 0.1.0
Summary: Python library for controlling the Inspire Hand RH56dfq robotic hand
Home-page: https://github.com/yourusername/inspire_hand
Author: Inspire Hand Team
Author-email: Inspire Hand Team <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/inspire_hand
Project-URL: Bug Tracker, https://github.com/yourusername/inspire_hand/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: pyserial>=3.5
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# Inspire Hand Python Library

A Python library for controlling the Inspire Hand RH56dfq robotic hand through a serial connection using Modbus RTU protocol.

## Features

- Complete control of the Inspire Hand RH56dfq
- Pythonic API for intuitive hand control
- Individual finger manipulation
- Pre-defined gestures (pinch, point, thumbs-up, grip)
- Status monitoring and error handling
- Support for speed and force control

## Installation

```bash
pip install inspire-hand
```

## Quick Start

```python
from inspire_hand import InspireHand

# Connect to the hand
with InspireHand(port='/dev/tty.usbserial-210') as hand:
    # Open all fingers
    hand.open_all_fingers()
    
    # Close just the index finger
    hand.index_finger.close()
    
    # Make a pinch gesture
    hand.pinch(force=500)
    
    # Get the current angle of the thumb
    thumb_angle = hand.thumb_bend.angle
    print(f"Thumb angle: {thumb_angle}")
```

## Documentation

### Connecting to the Hand

```python
from inspire_hand import InspireHand

# Option 1: Using context manager (recommended)
with InspireHand(port='/dev/tty.usbserial-210', baudrate=115200) as hand:
    # Your code here
    pass

# Option 2: Manual connection
hand = InspireHand(port='/dev/tty.usbserial-210', baudrate=115200)
hand.open()
# Your code here
hand.close()
```

### Controlling Fingers

```python
# Open and close all fingers
hand.open_all_fingers()
hand.close_all_fingers()

# Control individual fingers
hand.index_finger.open()
hand.thumb_bend.close()
hand.middle_finger.move(500)  # Move to middle position (0-1000)

# Set speed for all fingers (0-1000)
hand.set_all_finger_speeds(800)

# Set force threshold for all fingers (0-1000)
hand.set_all_finger_forces(500)
```

### Gestures

```python
# Pinch gesture (thumb and index finger)
hand.pinch(force=500)

# Pointing gesture (index finger extended)
hand.point()

# Thumbs up gesture
hand.thumbs_up()

# Grip (close all fingers with specific force)
hand.grip(force=700)
```

### Reading Status

```python
# Get current angles of all fingers
angles = hand.get_finger_angles()

# Get current force values
forces = hand.get_finger_forces()

# Get status of a specific finger
status = hand.index_finger.status
if status == FingerStatus.REACHED_FORCE:
    print("Index finger has reached the force limit")

# Check for errors
if hand.middle_finger.error & ErrorCode.OVER_TEMPERATURE:
    print("Middle finger temperature is too high!")
```

## License

MIT License 
